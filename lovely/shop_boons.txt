Scrapped

[manifest]
version = "1.0.0"
dump_lua = true
priority = 0


[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern =  '''
            UIBox_dyn_container({
                {n=G.UIT.C, config={align = "cm", padding = 0.1, emboss = 0.05, r = 0.1, colour = G.C.DYN_UI.BOSS_MAIN}, nodes={
'''
position = "at"
payload = '''
    UIBox_dyn_container({
        {n=G.UIT.C, config={align = "tm", padding = 0.1,minw = 0.3, r = 0.1, colour = G.C.DYN_UI.BOSS_MAIN, vert= true}, nodes={
            {n=G.UIT.R,config={align = "cm",padding = 0, minh = 0.1, minw = 0.2, r=0.15,colour = G.C.DYN_UI.BOSS_MAIN}, nodes = {}},
             {n=G.UIT.R,config={align = "cm",padding = 0.2, minh = 0.6, minw = 0.2, r=0.15,colour = RevosVault.C.BOONS.CURRENT, button = 'boons_menu', hover = true,shadow = true}, nodes = {
                {n=G.UIT.T, config={text = "BOONS", scale = 0.3, colour = G.C.WHITE, vert = true}},
		}},
    }},
                {n=G.UIT.C, config={align = "cm", padding = 0.1, emboss = 0.05, r = 0.1, colour = G.C.DYN_UI.BOSS_MAIN}, nodes={

'''
match_indent = true

# Boons Tab
[[patches]]
[patches.pattern]
target = 'functions/UI_definitions.lua'
pattern = "G.GAME.stake > 1 and {"
position = "before"
payload = '''
        {
            label = "Boons",
            tab_definition_function = G.UIDEF.active_boons,
        },
'''
match_indent = true

# Boons cardarea
[[patches]]
[patches.pattern]
target = 'game.lua'
match_indent = true
position = 'before'
pattern = 'self.deck = CardArea('
payload = '''self.boons = CardArea(
    G.discard.T.x, G.discard.T.y,
    G.discard.T.w, G.discard.T.h,
    { type = "discard", card_limit = 1e308 }
)
'''

# Accept button
[[patches]]
[patches.pattern]
target = 'functions/UI_definitions.lua'
pattern = '''
  elseif args.type == 'redeem' then 
    button_contents = {n=G.UIT.T, config={text = localize('b_redeem'),colour = G.C.WHITE, scale = 0.5}}
'''
position = "after"
payload = '''
  elseif args.type == 'accept' then 
    button_contents = {n=G.UIT.T, config={text = "accept",colour = G.C.WHITE, scale = 0.5}}
'''
match_indent = false

# Accept button
[[patches]]
[patches.pattern]
target = 'functions/UI_definitions.lua'
pattern = '''
  if card.area == G.shop_vouchers and G.shop_vouchers then --Add a redeem button
    base_attach.children.redeem = G.UIDEF.card_focus_button{
      card = card, parent = base_attach, type = 'buy',
      func = 'can_redeem', button = 'redeem_from_shop', card_width = card_width
    }
  end
'''
position = "after"
payload = '''
  if card.area == G.buy_boons and G.buy_boons then 
    base_attach.children.accept = G.UIDEF.card_focus_button{
      card = card, parent = base_attach, type = 'buy',
      func = 'can_accept', button = 'accept_blessing', card_width = card_width
    }
  end
'''
match_indent = false

[[patches]]
[patches.pattern]
target = 'functions/UI_definitions.lua'
pattern = '''
            }} or card.ability.set == 'Booster' and {
            n=G.UIT.ROOT, config = {ref_table = card, minw = 1.1, maxw = 1.3, padding = 0.1, align = 'bm', colour = G.C.GREEN, shadow = true, r = 0.08, minh = 0.94, func = 'can_open', one_press = true, button = 'open_booster', hover = true}, nodes={
                {n=G.UIT.T, config={text = localize('b_open'),colour = G.C.WHITE, scale = 0.5}}
'''
position = "after"
payload = '''
            }} or card.ability.set == 'Blessing' and {
            n=G.UIT.ROOT, config = {ref_table = card, minw = 1.1, maxw = 1.3, padding = 0.1, align = 'bm', colour = G.C.GREEN, shadow = true, r = 0.08, minh = 0.94, func = 'can_accept', one_press = true, button = 'accept_blessing', hover = true}, nodes={
                {n=G.UIT.T, config={text = "Accept",colour = G.C.WHITE, scale = 0.5}}
'''
match_indent = false

# Rarity Badge

[[patches]]
[patches.pattern]
target = 'functions/UI_definitions.lua'
pattern = '''
      if AUT.card_type == 'Joker' or (AUT.badges and AUT.badges.force_rarity) then card_type = ({localize('k_common'), localize('k_uncommon'), localize('k_rare'), localize('k_legendary')})[card.config.center.rarity] end
'''
position = "at"
payload = '''
      if AUT.card_type == 'Joker' or (AUT.badges and AUT.badges.force_rarity) or card.ability.set == "Boon" then card_type = ({localize('k_common'), localize('k_uncommon'), localize('k_rare'), localize('k_legendary')})[card.config.center.rarity] end
'''
match_indent = false

# Boon Calculate

[[patches]]
[patches.pattern]
target = '=[SMODS _ "src/utils.lua"]'
pattern = '-- TARGET: add your own CardAreas for joker evaluation'
position = "after"
payload = '''
table.insert(t, #t, G.boons)
'''
match_indent = true

# card_eval_status_text alignment patches
[[patches]]
[patches.pattern]
target = 'functions/common_events.lua'
match_indent = true
position = 'before'
pattern = '''elseif card.area == G.discard or card.area == G.vouchers then'''
payload = '''elseif card.area == G.boons then
        y_off = card.area == G.discard and -0.35*G.CARD_H or -0.65*G.CARD_H
        card = G.deck.cards[1] or G.deck
        card_aligned = 'cm'
'''