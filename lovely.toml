[manifest]
version = "1.0.0"
dump_lua = true
priority = 99999


[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "local replace_card = Card(self.title_top.T.x, self.title_top.T.y, 1.2*G.CARD_W*SC_scale, 1.2*G.CARD_H*SC_scale, G.P_CARDS.S_A, G.P_CENTERS.c_base)"
position = "at"
payload = '''
if next(SMODS.find_mod("Cryptid")) then
    replace_card = Card(self.title_top.T.x, self.title_top.T.y, 1.2*G.CARD_W*SC_scale, 1.2*G.CARD_H*SC_scale, G.P_CARDS.S_A, G.P_CENTERS.c_base)
else
	replace_card = SMODS.create_card({
		set = "Joker",
		area = G.title_top,
		key = "j_crv_printertitle",
		no_edition = true
	})
    replace_card.T.scale = 1.32
end
'''
match_indent = true
overwrite = true

[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "SC = Card(G.ROOM.T.w/2 - SC_scale*G.CARD_W/2, 10. + G.ROOM.T.h/2 - SC_scale*G.CARD_H/2, SC_scale*G.CARD_W, SC_scale*G.CARD_H, G.P_CARDS.empty, G.P_CENTERS['j_joker'])"
position = "after"
payload = '''
	SC = Card(G.ROOM.T.w/2 - SC_scale*G.CARD_W/2, 10. + G.ROOM.T.h/2 - SC_scale*G.CARD_H/2, SC_scale*G.CARD_W, SC_scale*G.CARD_H, G.P_CARDS.empty, G.P_CENTERS['j_crv_holybanana'],{bypass_discovery_center = true, bypass_discovery_ui = true})
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "game.lua"
pattern =  '''
"m_glass =   {max = 500, order = 5, name = "Glass Card", set = "Enhanced", pos = {x=5,y=1}, effect = "Glass Card", label = "Glass Card", config = {Xmult = 2, extra = 4}},"
'''
position = "at"
payload =  '''
m_glass =   {max = 500, order = 5, name = "Glass Card", set = "Enhanced", pos = {x=5,y=1}, effect = "Glass Card", label = "Glass Card", config = {Xmult = 2, extra = G.GAME.glassodds}},
'''
match_indent = true
overwrite = true

[[patches]]
[patches.pattern]
target = "commen_events.lua"
pattern = '''
"elseif _c.effect == 'Glass Card' then loc_vars = {_c.config.Xmult, G.GAME.probabilities.normal, _c.config.extra}"
'''
position = "at"
payload =  '''
elseif _c.effect == 'Glass Card' then loc_vars = {_c.config.Xmult, G.GAME.probabilities.normal, G.GAME.glassodds}
'''
match_indent = true
overwrite = true


# Trying to patch into obsidian orb to fix bricking issue

[[patches]]
[patches.pattern]
target = '=[SMODS Crypid "lib/overrides.lua"]'
pattern = '	--Stop impossible blind combinations from happening'
position = "after"
payload = '''
		and (self.name ~= "The Psychic" or not G.GAME.defeated_blinds["bl_jud_minimalizm"])
'''
match_indent = true

[[patches]]
[patches.pattern]
target = 'common_events.lua'
pattern = '''   
 elseif _c.set == 'Tarot' then
 '''
position = "before"
payload = '''
	elseif _c.set == 'Superior' then
       if _c.key == "supfool" then
            local fool_c = G.GAME.last_destroyed_joker and G.P_CENTERS[G.GAME.last_destroyed_joker] or nil
            local last_destroyed_joker = fool_c and localize{type = 'name_text', key = fool_c.key, set = fool_c.set} or localize('k_none')
            local colour = (not fool_c or fool_c.name == 'The Fool') and G.C.RED or G.C.GREEN
            main_end = {
                {n=G.UIT.C, config={align = "bm", padding = 0.02}, nodes={
                    {n=G.UIT.C, config={align = "m", colour = colour, r = 0.05, padding = 0.05}, nodes={
                        {n=G.UIT.T, config={text = ' '..last_destroyed_joker..' ', colour = G.C.UI.TEXT_LIGHT, scale = 0.3, shadow = true}},
                    }}
                }}
            }
           loc_vars = {last_destroyed_joker}
           if not (not fool_c or fool_c.key == "supfool") then
                info_queue[#info_queue+1] = fool_c
           end
'''
match_indent = true


